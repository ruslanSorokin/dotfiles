// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "command": "workbench.action.terminal.focusNext",
    "key": "ctrl+shift+l",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusNext",
    "key": "ctrl+pagedown",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.focusPrevious",
    "key": "ctrl+shift+h",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "-workbench.action.terminal.focusPrevious",
    "key": "ctrl+pageup",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "ctrl+shift+n"
  },
  {
    "command": "-workbench.action.terminal.new",
    "key": "ctrl+shift+`",
    "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.newWindow",
    "key": "ctrl+shift+n"
  },
  {
    "command": "-workbench.action.terminal.split",
    "key": "ctrl+shift+5",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "command": "-workbench.action.terminal.splitInstance",
    "key": "ctrl+shift+5",
    "when": "terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "workbench.action.terminal.focusNextPane",
    "key": "ctrl+alt+]",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+down",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusNextPane",
    "key": "alt+right",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.terminal.focusPreviousPane",
    "key": "ctrl+alt+[",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+up",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.focusPreviousPane",
    "key": "alt+left",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.closeActiveEditor",
    "key": "ctrl+f4"
  },
  {
    "command": "-workbench.action.terminal.killEditor",
    "key": "ctrl+f4",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "command": "-workbench.action.closeGroup",
    "key": "ctrl+f4",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "command": "-workbench.action.terminal.killEditor",
    "key": "ctrl+w",
    "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
  },
  {
    "command": "-workbench.action.terminal.killInstance",
    "key": "delete",
    "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "ctrl+shift+x",
    "when": "terminalFocus || terminalTabsFocus"
  },
  {
    "command": "workbench.action.terminal.newWithProfile",
    "key": "ctrl+shift+alt+n"
  },
  {
    "command": "workbench.action.terminal.resizePaneUp",
    "key": "ctrl+shift+alt+k",
    "when": "terminalFocus"
  },
  {
    "command": "workbench.action.terminal.resizePaneDown",
    "key": "ctrl+shift+alt+j",
    "when": "terminalFocus"
  },
  {
    "command": "-workbench.action.togglePanel",
    "key": "ctrl+j"
  },
  {
    "command": "-workbench.action.terminal.runRecentCommand",
    "key": "ctrl+r",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.openRecent",
    "key": "ctrl+r"
  },
  {
    "command": "-workbench.action.reloadWindow",
    "key": "ctrl+r",
    "when": "isDevelopment"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
    "key": "ctrl+r",
    "when": "inQuickOpen && inRecentFilesPicker"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "ctrl+`"
  },
  {
    "command": "workbench.action.focusActiveEditorGroup",
    "key": "ctrl+`",
    "when": "terminalFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "n",
    "when": "explorerViewletFocus && !inputFocus"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
    "key": "ctrl+shift+q",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "-editor.action.insertCursorBelow",
    "key": "ctrl+alt+down",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertCursorAbove",
    "key": "ctrl+alt+k",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.insertCursorAbove",
    "key": "ctrl+alt+up",
    "when": "editorTextFocus"
  },
  {
    "command": "code-runner.runCustomCommand",
    "key": "ctrl+alt+r",
    "when": "editorFocus"
  },
  {
    "command": "-code-runner.runCustomCommand",
    "key": "ctrl+alt+k"
  },
  {
    "command": "-code-runner.runByLanguage",
    "key": "ctrl+alt+j"
  },
  {
    "command": "-workbench.action.terminal.runRecentCommand",
    "key": "ctrl+alt+r",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-renameFile",
    "key": "f2",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "workbench.action.terminal.focusAccessibleBuffer",
    "key": "ctrl+shift+i",
    "when": "terminalTabFocusMode || terminalFocus "
  },
  {
    "command": "-workbench.action.terminal.focusAccessibleBuffer",
    "key": "shift+tab",
    "when": "accessibilityModeEnabled && terminalHasBeenCreated && terminalTabFocusMode && !terminalAccessibleBufferFocus || accessibilityModeEnabled && terminalProcessSupported && terminalTabFocusMode && !terminalAccessibleBufferFocus"
  },
  {
    "command": "-workbench.action.toggleDevTools",
    "key": "ctrl+shift+i",
    "when": "isDevelopment"
  },
  {
    "command": "abcopy.clipboardCopyAction",
    "key": "y",
    "when": "terminalAccessibleBufferFocus"
  },
  {
    "command": "-editor.action.toggleTabFocusMode",
    "key": "ctrl+m"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "ctrl+x",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "-workbench.action.closeActiveEditor",
    "key": "ctrl+w"
  },
  {
    "command": "-workbench.action.nextEditorInGroup",
    "key": "ctrl+k ctrl+pagedown"
  },
  {
    "command": "-workbench.action.previousEditorInGroup",
    "key": "ctrl+k ctrl+pageup"
  },
  {
    "command": "workbench.action.moveEditorToLeftGroup",
    "key": "ctrl+shift+w h",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "workbench.action.moveEditorToRightGroup",
    "key": "ctrl+shift+w l",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "workbench.action.closeWindow",
    "key": "alt+q"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "alt+f4"
  },
  {
    "command": "-editor.action.outdentLines",
    "key": "ctrl+[",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.indentLines",
    "key": "ctrl+]",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "command": "toggleVim",
    "key": "ctrl+shift+alt+space"
  },
  {
    "command": "editor.action.insertCursorBelow",
    "key": "ctrl+alt+down",
    "when": "editorTextFocus"
  },
  {
    "command": "editor.action.insertCursorAbove",
    "key": "ctrl+alt+up",
    "when": "editorTextFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+shift+e"
  },
  {
    "command": "-testing.debugAll",
    "key": "ctrl+; ctrl+a"
  },
  {
    "command": "-testing.debugFailTests",
    "key": "ctrl+; ctrl+e"
  },
  {
    "command": "-testing.debugLastRun",
    "key": "ctrl+; ctrl+l"
  },
  {
    "command": "-testing.debugAtCursor",
    "key": "ctrl+; ctrl+c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.debugCurrentFile",
    "key": "ctrl+; ctrl+f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.openOutputPeek",
    "key": "ctrl+; ctrl+m"
  },
  {
    "command": "-testing.refreshTests",
    "key": "ctrl+; ctrl+r",
    "when": "testing.canRefresh"
  },
  {
    "command": "-testing.reRunFailTests",
    "key": "ctrl+; e"
  },
  {
    "command": "-testing.reRunLastRun",
    "key": "ctrl+; l"
  },
  {
    "command": "-testing.runAll",
    "key": "ctrl+; a"
  },
  {
    "command": "-testing.runAtCursor",
    "key": "ctrl+; c",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.runCurrentFile",
    "key": "ctrl+; f",
    "when": "editorTextFocus"
  },
  {
    "command": "-testing.showMostRecentOutput",
    "key": "ctrl+; ctrl+o",
    "when": "testing.hasAnyResults"
  },
  {
    "command": "-testing.toggleInlineTestOutput",
    "key": "ctrl+; ctrl+i"
  },
  {
    "command": "-testing.cancelRun",
    "key": "ctrl+; ctrl+x"
  },
  {
    "command": "workbench.action.moveEditorLeftInGroup",
    "key": "ctrl+shift+h",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "-workbench.action.moveEditorLeftInGroup",
    "key": "ctrl+shift+pageup"
  },
  {
    "command": "workbench.action.moveEditorRightInGroup",
    "key": "ctrl+shift+l",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "mermaid-editor.preview",
    "key": "ctrl+alt+p",
    "when": "resourceExtname == '.mmd'"
  },
  {
    "command": "-mermaid-editor.preview",
    "key": "ctrl+alt+[",
    "when": "resourceExtname == '.mmd'"
  },
  {
    "command": "-workbench.action.moveEditorToNextGroup",
    "key": "ctrl+alt+right"
  },
  {
    "command": "-workbench.action.moveEditorToPreviousGroup",
    "key": "ctrl+alt+left"
  },
  {
    "command": "-mermaid-editor.generate.clipboard",
    "key": "ctrl+alt+;",
    "when": "mermaidPreviewActive"
  },
  {
    "command": "-markdown.showPreview",
    "key": "ctrl+shift+v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "markdown.showPreview",
    "key": "ctrl+shift+alt+p",
    "when": "resourceExtname == '.md'"
  },
  {
    "command": "-markdown.showPreviewToSide",
    "key": "ctrl+k v",
    "when": "!notebookEditorFocused && editorLangId == 'markdown'"
  },
  {
    "command": "-svgPreview.showPreviewToSide",
    "key": "ctrl+alt+p",
    "when": "resourceLangId == 'svg' || resourceLangId == 'xml'"
  },
  {
    "command": "svgPreview.showPreview",
    "key": "ctrl+shift+alt+p",
    "when": "resourceExtname == '.svg'"
  },
  {
    "command": "markdown.showPreviewToSide",
    "key": "ctrl+alt+p",
    "when": "resourceExtname == '.md'"
  },
  {
    "command": "svgPreview.showPreviewToSide",
    "key": "ctrl+alt+p",
    "when": "resourceExtname == '.svg'"
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "ctrl+shift+="
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "ctrl+shift+-"
  },
  {
    "command": "git.stageSelectedRanges",
    "key": "ctrl+shift+="
  },
  {
    "command": "-git.stageSelectedRanges",
    "key": "ctrl+k ctrl+alt+s",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "git.unstageSelectedRanges",
    "key": "ctrl+shift+-"
  },
  {
    "command": "-git.unstageSelectedRanges",
    "key": "ctrl+k ctrl+n",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "workbench.action.terminal.openFileLink",
    "key": "ctrl+shift+o"
  },
  {
    "command": "-workbench.action.terminal.openNativeConsole",
    "key": "ctrl+shift+c",
    "when": "!terminalFocus"
  },
  {
    "command": "-workbench.action.terminal.copySelection",
    "key": "ctrl+shift+c",
    "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "command": "references-view.findReferences",
    "key": "ctrl+\\",
    "when": "editorHasReferenceProvider"
  },
  {
    "command": "references-view.findImplementations",
    "key": "ctrl+shift+\\",
    "when": "editorHasReferenceProvider"
  },
  {
    "command": "-workbench.view.extensions",
    "key": "ctrl+shift+x",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  {
    "command": "-editor.action.clipboardCutAction",
    "key": "ctrl+x"
  },
  {
    "command": "-workbench.action.nextEditor",
    "key": "ctrl+pagedown"
  },
  {
    "command": "-workbench.action.previousEditor",
    "key": "ctrl+pageup"
  },
  {
    "command": "-workbench.action.zoomIn",
    "key": "ctrl+="
  },
  {
    "command": "-workbench.action.zoomOut",
    "key": "ctrl+-"
  },
  {
    "command": "swagger.preview",
    "key": "ctrl+alt+p",
    "when": "resourceExtname == '.json' || resourceExtname == '.yaml' || resourceExtname == '.yml'"
  },
  {
    "command": "-swagger.preview",
    "key": "shift+alt+p",
    "when": "editorTextFocus"
  },
  // <C-j> <C-k> for menus
  // Down motion
  {
    "command": "cursorDown",
    "key": "ctrl+j",
    "when": "textInputFocus"
  },
  {
    "command": "showNextParameterHint",
    "key": "ctrl+j",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+j",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "list.focusDown",
    "key": "ctrl+j",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+j",
    "when": "inQuickOpen"
  },
  {
    "command": "selectNextCodeAction",
    "key": "ctrl+j",
    "when": "codeActionMenuVisible"
  },
  // Up Motion
  {
    "command": "cursorUp",
    "key": "ctrl+k",
    "when": "textInputFocus"
  },
  {
    "command": "showPrevParameterHint",
    "key": "ctrl+k",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+k",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "list.focusUp",
    "key": "ctrl+k",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "ctrl+k",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+k",
    "when": "inQuickOpen"
  },
  //
  // Down motion
  {
    "command": "cursorDown",
    "key": "ctrl+n",
    "when": "textInputFocus"
  },
  {
    "command": "showNextParameterHint",
    "key": "ctrl+n",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "selectNextSuggestion",
    "key": "ctrl+n",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "list.focusDown",
    "key": "ctrl+n",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "workbench.action.quickOpenSelectNext",
    "key": "ctrl+n",
    "when": "inQuickOpen"
  },
  {
    "command": "selectNextCodeAction",
    "key": "ctrl+n",
    "when": "codeActionMenuVisible"
  },
  // Up Motion
  {
    "command": "cursorUp",
    "key": "ctrl+p",
    "when": "textInputFocus"
  },
  {
    "command": "showPrevParameterHint",
    "key": "ctrl+p",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "command": "selectPrevSuggestion",
    "key": "ctrl+p",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "command": "list.focusUp",
    "key": "ctrl+p",
    "when": "listFocus && !inputFocus"
  },
  {
    "command": "selectPrevCodeAction",
    "key": "ctrl+p",
    "when": "codeActionMenuVisible"
  },
  {
    "command": "workbench.action.quickOpenSelectPrevious",
    "key": "ctrl+p",
    "when": "inQuickOpen"
  },
  {
    "command": "nextCompressedFolder",
    "key": "l",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus"
  },
  {
    "command": "previousCompressedFolder",
    "key": "h",
    "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus"
  },
  {
    "command": "list.toggleSelection",
    "key": "ctrl+space",
    "when": "explorerViewletFocus"
  },
  {
    "command": "-openapi.preview",
    "key": "shift+alt+p",
    "when": "editorTextFocus && !openapiErrors"
  },
  {
    "command": "openapi.previewSwaggerUI",
    "key": "ctrl+alt+p",
    "when": "resourceExtname == '.yaml' || resourceExtname == '.yml' || resourceExtname == '.json'"
  },
  {
    "command": "git.revertSelectedRanges",
    "key": "ctrl+shift+backspace"
  },
  {
    "command": "-git.revertSelectedRanges",
    "key": "ctrl+k ctrl+r",
    "when": "isInDiffEditor && !operationInProgress"
  },
  {
    "command": "-search.searchEditor.action.deleteFileResults",
    "key": "ctrl+shift+backspace",
    "when": "inSearchEditor"
  },
  {
    "command": "workbench.files.action.collapseExplorerFolders",
    "key": "c",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "-workbench.action.files.newUntitledFile",
    "key": "ctrl+n"
  },
  {
    "command": "editor.action.scrollLeftHover",
    "key": "h",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollDownHover",
    "key": "j",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollUpHover",
    "key": "k",
    "when": "editorHoverFocused"
  },
  {
    "command": "editor.action.scrollRightHover",
    "key": "l",
    "when": "editorHoverFocused"
  },
  {
    "command": "-editor.action.showHover",
    "key": "ctrl+k ctrl+i",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.splitEditor",
    "key": "ctrl+\\"
  },
  {
    "command": "-editor.action.jumpToBracket",
    "key": "ctrl+shift+\\",
    "when": "editorTextFocus"
  },
  {
    "command": "-workbench.action.terminal.focusTabs",
    "key": "ctrl+shift+\\",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
  },
  {
    "command": "-workbench.action.moveEditorRightInGroup",
    "key": "ctrl+shift+pagedown"
  },
  {
    "command": "-workbench.action.openSettings",
    "key": "ctrl+,"
  },
  {
    "command": "editor.action.quickFix",
    "key": "ctrl+.",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "-editor.action.quickFix",
    "key": "ctrl+.",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "cursorUndo",
    "key": "ctrl+m",
    "when": "editorTextFocus"
  },
  {
    "command": "-editor.action.startFindReplaceAction",
    "key": "ctrl+h",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "-actions.find",
    "key": "ctrl+f",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "command": "openInIntegratedTerminal",
    "key": "ctrl+t"
  },
  {
    "command": "-workbench.action.showAllSymbols",
    "key": "ctrl+t"
  },
  {
    "command": "-workbench.action.search.toggleQueryDetails",
    "key": "ctrl+shift+j",
    "when": "inSearchEditor || searchViewletFocus"
  },
  {
    "command": "-editor.action.deleteLines",
    "key": "ctrl+shift+k",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+p"
  },
  {
    "command": "-workbench.action.toggleSidebarVisibility",
    "key": "ctrl+b"
  },
  {
    "command": "-workbench.action.tasks.build",
    "key": "ctrl+shift+b",
    "when": "taskCommandsRegistered"
  },
  {
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "key": "alt+c",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.replaceInFiles",
    "key": "ctrl+alt+h",
    "when": "!terminalFocus"
  },
  {
    "command": "-workbench.action.replaceInFiles",
    "key": "ctrl+shift+h"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "ctrl+alt+f",
    "when": "!terminalFocus"
  },
  {
    "command": "-workbench.action.findInFiles",
    "key": "ctrl+shift+f"
  },
  {
    "command": "find-it-faster.findFiles",
    "key": "ctrl+alt+j"
  },
  {
    "command": "-find-it-faster.findFiles",
    "key": "ctrl+shift+j"
  },
  {
    "command": "-workbench.action.terminal.searchWorkspace",
    "key": "ctrl+shift+f",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
  },
  {
    "command": "-editor.action.accessibleViewGoToSymbol",
    "key": "ctrl+shift+o",
    "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
  },
  {
    "command": "workbench.action.terminal.openDetectedLink",
    "key": "ctrl+shift+alt+o",
    "when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalFocus && terminalHasBeenCreated"
  },
  {
    "command": "-workbench.action.terminal.openDetectedLink",
    "key": "ctrl+shift+o",
    "when": "terminalAccessibleBufferFocus && terminalHasBeenCreated || terminalFocus && terminalHasBeenCreated"
  },
  {
    "command": "workbench.action.terminal.scrollUpPage",
    "key": "ctrl+shift+k",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-workbench.action.terminal.scrollUpPage",
    "key": "shift+pageup",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "workbench.action.terminal.scrollDownPage",
    "key": "ctrl+shift+j",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-workbench.action.terminal.scrollDownPage",
    "key": "shift+pagedown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
  },
  {
    "command": "-editor.action.selectAll",
    "key": "ctrl+a"
  },
  {
    "command": "-workbench.action.quickOpenView",
    "key": "ctrl+q"
  },
  {
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "key": "ctrl+q",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "command": "-workbench.action.terminal.focusFind",
    "key": "ctrl+f",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "ctrl+g",
    "when": "!terminalFocus"
  },
  {
    "command": "-workbench.action.quickOpen",
    "key": "ctrl+e"
  },
  {
    "command": "-workbench.action.terminal.goToRecentDirectory",
    "key": "ctrl+g",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.gotoLine",
    "key": "ctrl+g"
  },
  {
    "command": "-workbench.action.showCommands",
    "key": "f1"
  },
  {
    "command": "list.find",
    "key": "/",
    "when": "listFocus && listSupportsFind && !inputFocus"
  },
  {
    "command": "-list.find",
    "key": "ctrl+f",
    "when": "listFocus && listSupportsFind"
  },
  {
    "command": "-workbench.action.closeWindow",
    "key": "ctrl+shift+w"
  },
  {
    "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
    "key": "ctrl+shift+e",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "command": "workbench.action.focusLeftGroup",
    "key": "ctrl+w h",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "-workbench.action.focusLeftGroup",
    "key": "ctrl+k ctrl+left"
  },
  {
    "command": "workbench.action.focusRightGroup",
    "key": "ctrl+w l",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "-workbench.action.focusRightGroup",
    "key": "ctrl+k ctrl+right"
  },
  {
    "command": "-workbench.action.closeGroup",
    "key": "ctrl+w",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "command": "-workbench.action.chat.clear",
    "key": "ctrl+l",
    "when": "hasChatProvider && inChat"
  },
  {
    "command": "-expandLineSelection",
    "key": "ctrl+l",
    "when": "textInputFocus"
  },
  {
    "command": "-notebook.centerActiveCell",
    "key": "ctrl+l",
    "when": "notebookEditorFocused"
  },
  {
    "command": "workbench.action.previousEditorInGroup",
    "key": "ctrl+h",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "workbench.action.nextEditorInGroup",
    "key": "ctrl+l",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "filesExplorer.openFilePreserveFocus",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "workbench.view.explorer",
    "key": "ctrl+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "-workbench.view.explorer",
    "key": "ctrl+shift+e",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "command": "-editor.action.toggleScreenReaderAccessibilityMode",
    "key": "ctrl+e",
    "when": "accessibilityHelpIsShown"
  },
  {
    "command": "-breadcrumbs.revealFocused",
    "key": "space",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "command": "-debug.toggleBreakpoint",
    "key": "space",
    "when": "breakpointsFocused && !inputFocus"
  },
  {
    "command": "editor.action.clipboardPasteAction",
    "key": "ctrl+shift+v"
  },
  {
    "command": "-editor.action.clipboardPasteAction",
    "key": "ctrl+v"
  },
  {
    "command": "workbench.action.terminal.paste",
    "key": "ctrl+shift+v",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "-workbench.action.terminal.paste",
    "key": "ctrl+v",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "command": "filesExplorer.paste",
    "key": "ctrl+shift+v",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-filesExplorer.paste",
    "key": "ctrl+v",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "workbench.action.terminal.sendSequence",
    "key": "ctrl+shift+v",
    "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "command": "-workbench.action.terminal.sendSequence",
    "key": "ctrl+v",
    "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "command": "editor.action.clipboardCopyAction",
    "key": "ctrl+shift+c"
  },
  {
    "command": "-editor.action.clipboardCopyAction",
    "key": "ctrl+c"
  },
  {
    "command": "workbench.action.terminal.copyAndClearSelection",
    "key": "ctrl+shift+c",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "command": "-workbench.action.terminal.copyAndClearSelection",
    "key": "ctrl+c",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "command": "filesExplorer.copy",
    "key": "ctrl+shift+c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "command": "-filesExplorer.copy",
    "key": "ctrl+c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "command": "search.action.copyMatch",
    "key": "ctrl+shift+c",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "command": "-search.action.copyMatch",
    "key": "ctrl+c",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "command": "remote.tunnel.copyAddressInline",
    "key": "ctrl+shift+c",
    "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "command": "-remote.tunnel.copyAddressInline",
    "key": "ctrl+c",
    "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "command": "problems.action.copy",
    "key": "ctrl+shift+c",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "command": "-problems.action.copy",
    "key": "ctrl+c",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "command": "keybindings.editor.copyKeybindingEntry",
    "key": "ctrl+shift+c",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "command": "-keybindings.editor.copyKeybindingEntry",
    "key": "ctrl+c",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "command": "-editor.action.refactor",
    "key": "ctrl+shift+r",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "-workbench.action.closeEditorsInGroup",
    "key": "ctrl+k w"
  },
  {
    "command": "-workbench.action.closeUnmodifiedEditors",
    "key": "ctrl+k u"
  },
  {
    "command": "-workbench.action.moveEditorToFirstGroup",
    "key": "shift+alt+1"
  },
  {
    "command": "-workbench.action.moveEditorToLastGroup",
    "key": "shift+alt+9"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "ctrl+9"
  },
  {
    "command": "-workbench.action.lastEditorInGroup",
    "key": "alt+0"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "shift+o",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "-workbench.action.focusAboveGroup",
    "key": "ctrl+k ctrl+up"
  },
  {
    "command": "-workbench.action.focusBelowGroup",
    "key": "ctrl+k ctrl+down"
  },
  {
    "command": "-workbench.action.focusFirstEditorGroup",
    "key": "ctrl+1"
  },
  {
    "command": "-workbench.action.joinEditorInGroup",
    "key": "ctrl+k ctrl+shift+\\",
    "when": "sideBySideEditorActive"
  },
  {
    "command": "-workbench.action.keepEditor",
    "key": "ctrl+k enter"
  },
  {
    "command": "-workbench.action.files.openFile",
    "key": "ctrl+o",
    "when": "true"
  },
  {
    "command": "-workbench.action.files.openFileFolder",
    "key": "ctrl+o",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "key": "ctrl+o",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "command": "-workbench.action.files.openLocalFile",
    "key": "ctrl+o",
    "when": "remoteFileDialogVisible"
  },
  {
    "command": "workbench.action.splitEditorDown",
    "key": "ctrl+shift+w ctrl+shift+j"
  },
  {
    "command": "-workbench.action.splitEditorDown",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorLeft",
    "key": "ctrl+shift+w ctrl+shift+h"
  },
  {
    "command": "-workbench.action.splitEditorLeft",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorRight",
    "key": "ctrl+shift+w ctrl+shift+l"
  },
  {
    "command": "-workbench.action.splitEditorRight",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.splitEditorUp",
    "key": "ctrl+shift+w ctrl+shift+k"
  },
  {
    "command": "-workbench.action.splitEditorUp",
    "key": "ctrl+k ctrl+\\"
  },
  {
    "command": "workbench.action.focusAboveGroup",
    "key": "ctrl+w k",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "workbench.action.focusBelowGroup",
    "key": "ctrl+w j",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "workbench.action.moveEditorToAboveGroup",
    "key": "ctrl+shift+w k",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "workbench.action.moveEditorToBelowGroup",
    "key": "ctrl+shift+w j",
    "when": "!terminalFocus && !terminalTabsFocus"
  },
  {
    "command": "search.action.focusNextSearchResult",
    "key": "n",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "-search.action.focusNextSearchResult",
    "key": "f4",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "search.action.focusPreviousSearchResult",
    "key": "shift+n",
    "when": "hasSearchResult || inSearchEditor"
  },
  {
    "command": "-search.action.focusPreviousSearchResult",
    "key": "shift+f4",
    "when": "hasSearchResult || inSearchEditor"
  }
]